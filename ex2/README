moshemandel, gilovi
Moshe Mandel (301117800), Gilad Ovits (300604493)
EX: 2

FILES:
thread		a data structure thats represents a thread.
priorityList	priority queue of thread pointers which uses the priority's colors.
uthreads	the requseted user thread library.
general.h	general includes and defines.
Makefile	the makefile for the exercise.
README		this file.

REMARKS:
Our library uses thread objects and a custom priority list to manage its database.
The priority list is a wrapper to 3 queues, and pushes and removes according to 
priority. Also, it allows to remove each thread individually by its ID number.

We have directly implemented the library in uthreads.cpp.
In addition to the library functions declared at the header, we have implemented functions
that handle timer issues and switching between threads. For library functions that may 
access the library's database for a substantial duration of time or modify it, we block the
timer signal at the beginning of the function call and resume it at the call's end. This is
in order to prevent a case of "signal racing" -- where the function is called before the quantum
is finished. This prevents undefined behaviour of the system (such as segmentation faults).

We have not blocked/resumed the signal before/after the switchThreads function. This is because
the signal which called the timer handler (which in turns calls switchThreads) is by default
blocked during the execution of the handler -- acording to the description of linux's sigaction
command.

ANSWERS:
1.
RR pro & PQ con: approximating the ideal parallel processing by sharing the processor time. in PQ
schedueling is linear so it is far from ideal in general case. 
RR con & PQ pro: mark certain task as more important. (impossible and possible respectedly) 
in our implementation there is possiblity to set priority, on the price that threads might get
starved, but without loosing the very good time sharing approximatation.

2.
A simple case is when a user asks for opening a file. the time to get data from the HDD is
significantly slower than the processor's clock, so the OS will probably block it until it's done.
